/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package prog2.vista;

import java.util.ArrayList;
import javax.swing.DefaultListModel;
import prog2.adaptador.Adaptador;

/**
 * Ventana que permite visualizar y gestionar los artículos del mercado.
 *
 * @author arnau
 */
public class DialogGestioComandes extends javax.swing.JDialog {

    private Adaptador adaptador;

    /**
     * Constructor de DialogAfegirArticles.
     *
     * @param parent
     * @param modal
     * @param adaptador instacia de adaptador con los datos del mercado.
     */
    public DialogGestioComandes(java.awt.Frame parent, boolean modal, Adaptador adaptador) {
        super(parent, modal);
        initComponents();

        this.adaptador = adaptador;
        btnCancelar.setEnabled(false);
        chkCancelades.setSelected(false);
        omplirLlista(false);

    }

    /**
     * Rellena la lista con el listado de los artículos.
     */
    void omplirLlista(boolean Cancelades) {
        DefaultListModel model = new DefaultListModel();
        model.clear();
        ArrayList<String> llista = (Cancelades) ? (adaptador.llistarComandes("cancelades")) : (adaptador.llistarComandes("totes"));
        for (String comanda : llista) {
            model.addElement(comanda);
        }
        List.setModel(model);
    }

    /**
     * Getter del adaptador.
     *
     * @return objeto de la clase Adaptador con los datos del mercado.
     */
    public Adaptador getAdaptador() {
        return this.adaptador;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        List = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        btnAfegir = new javax.swing.JButton();
        btnTornar = new javax.swing.JButton();
        txtIntro = new javax.swing.JTextField();
        btnCancelar = new javax.swing.JButton();
        chkCancelades = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(435, 306));

        List.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        List.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                ListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(List);

        jLabel1.setFont(new java.awt.Font("Kannada MN", 0, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Gestio de comandes");

        btnAfegir.setText("Afegir comanda");
        btnAfegir.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnAfegir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAfegirActionPerformed(evt);
            }
        });

        btnTornar.setText("Tornar al menú principal");
        btnTornar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnTornar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTornarActionPerformed(evt);
            }
        });

        txtIntro.setBackground(new java.awt.Color(242, 242, 242));
        txtIntro.setText("Llista de comandes actuals");
        txtIntro.setBorder(null);
        txtIntro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIntroActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancel·lar comanda");
        btnCancelar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        chkCancelades.setText("Mostrar només les comandes cancel·lades");
        chkCancelades.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkCanceladesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(89, 89, 89)
                        .addComponent(chkCancelades))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 414, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtIntro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(btnAfegir, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancelar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnTornar)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtIntro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(chkCancelades)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancelar)
                    .addComponent(btnTornar)
                    .addComponent(btnAfegir))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Abre la ventana en la que se puede añadir un artículo y actualiza la
     * lista de artículos cuando se cierra dicha ventana.
     *
     * @param evt evento correspondiente a clicar el botón de añadir un
     * artículo.
     */
    private void btnAfegirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAfegirActionPerformed
        DialogAfegirComanda dialog = new DialogAfegirComanda(this, true, adaptador);
        dialog.setVisible(true);
        this.adaptador = dialog.getAdaptador();
        if (chkCancelades.isSelected()) {
            omplirLlista(true);
        } else {
            omplirLlista(false);
        }
    }//GEN-LAST:event_btnAfegirActionPerformed

    /**
     * Cierra la ventana.
     *
     * @param evt evento correspondiente a clicar el botón de volver.
     */
    private void btnTornarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTornarActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnTornarActionPerformed

    private void txtIntroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIntroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIntroActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:
        int i = List.getSelectedIndex();
        try {
            this.adaptador.cancelarComanda(i);
            if (chkCancelades.isSelected()) {
                omplirLlista(true);
            } else {
                omplirLlista(false);
            }
        } catch (MercatException ex) {
            ex.getMessage();
        }
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void ListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_ListValueChanged
        // TODO add your handling code here:
        btnCancelar.setEnabled(!List.isSelectionEmpty());
    }//GEN-LAST:event_ListValueChanged

    private void chkCanceladesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkCanceladesActionPerformed
        // TODO add your handling code here:
        if (chkCancelades.isSelected()) {
            omplirLlista(true);
        } else {
            omplirLlista(false);
        }
    }//GEN-LAST:event_chkCanceladesActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> List;
    private javax.swing.JButton btnAfegir;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnTornar;
    private javax.swing.JCheckBox chkCancelades;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtIntro;
    // End of variables declaration//GEN-END:variables
}
